(function () {

  'use strict';

  var HomeController = function (productService) { /*мы просим конструктор функцию передать нам сервис productService,
    сервис который у нас лежит в папочке service */
    var _this = this;
    _this.products = []; // экземпляр нашей конструктор функции.

    productService.getProducts()
        .then(function (data) { _this.products = data; }); /*вызывая вложенную функцию мы можем доятнуться до
    экземпляра productService. Если бы мы назвали выше переменную _this без нижненого префикса, поведение функции было
    бы непредсказуемым
    Мы вызываем метод getProducts. Это метод асинхронный, он делает http запрос и получает данные из json файла, т.е.
    он получает контент и возваращет коллекцию продуктов, но так как он ассинхронный, что после того как он завершится
    (словечко .then) выполни следующую функцию (выполни этот callback). В эту функцию будет передан объект данных:
    function(data). Объектом данных в нашем случае будет явзяться коллекция продуктов .getProducts. И дальше мы присваем
    полю экземпляра нашей конструктор фаункции эти данные: _this.products = data.  Мы здесь не испльзуем скоуп, а
    непосредственно кладем данные на наш контроллер.
    */
  };

  HomeController.$inject = ['ProductService']; /*статическое поле $inject дает понять ангуляру, что нас интересует
  конкретно productService*/
  angular.module('auction').controller('HomeController', HomeController); /*регестрируем контроллер внутри нашего
  модуля. Вызываем контроллер, который помогает зарегестрировать нашу конструктор функцию под именем 'HomeController'
  */

}());
